from typing import Dict, Any


class Header:
    @classmethod
    def calc_header_size(cls, key_size: int, n_entries: int) -> int: ...
    @classmethod
    def read(cls, path: str) -> Header: ...
    def inner(self) -> Dict[str, Any]: ...


class ArchiveWriter:
    def __new__(cls, path: str, cache_size: int = 100 * 1024 * 1024, max_header_size: int = 1024 * 1024) -> ArchiveWriter: ...
    @classmethod
    def read(cls, path: str, cache_size: int = 100 * 1024 * 1024) -> ArchiveWriter: ...
    def write(self, key: str, value: bytes): ...
    def close(self): ...